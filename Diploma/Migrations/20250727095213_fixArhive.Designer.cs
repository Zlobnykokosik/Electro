// <auto-generated />
using System;
using Diploma.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diploma.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250727095213_fixArhive")]
    partial class fixArhive
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Diploma.Models.Add.AbonentAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AbonentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("ChangeStatus")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ConclusionDate")
                        .HasColumnType("date");

                    b.Property<int?>("ContractAddId")
                        .HasColumnType("int");

                    b.Property<int?>("ControllersAddId")
                        .HasColumnType("int");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("ContractAddId");

                    b.HasIndex("ControllersAddId");

                    b.ToTable("Abonents");
                });

            modelBuilder.Entity("Diploma.Models.Add.ContractAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ConclusionDate")
                        .HasColumnType("date");

                    b.Property<int>("ContractNumber")
                        .HasColumnType("int");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Diploma.Models.Add.ControllersAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ContollerNum")
                        .HasColumnType("int");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.ToTable("ControllersAdds");
                });

            modelBuilder.Entity("Diploma.Models.Add.MeterAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("СommissioningDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.ToTable("Meters");
                });

            modelBuilder.Entity("Diploma.Models.Add.MountMeterAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int?>("MeterAddID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("SetDate")
                        .HasColumnType("date");

                    b.Property<int?>("UnitAddID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MeterAddID")
                        .IsUnique()
                        .HasFilter("[MeterAddID] IS NOT NULL");

                    b.HasIndex("UnitAddID")
                        .IsUnique()
                        .HasFilter("[UnitAddID] IS NOT NULL");

                    b.ToTable("MountMeters");
                });

            modelBuilder.Entity("Diploma.Models.Add.PointAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AbonentAddId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<int?>("ContractAddId")
                        .HasColumnType("int");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AbonentAddId");

                    b.HasIndex("ContractAddId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("Diploma.Models.Add.PointsBoundAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("PointIDBase")
                        .HasColumnType("int");

                    b.Property<int>("PointIDMinus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PointIDBase");

                    b.HasIndex("PointIDMinus");

                    b.ToTable("PointsBounds");
                });

            modelBuilder.Entity("Diploma.Models.Add.TransformerAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.Property<int>("Сoefficient")
                        .HasColumnType("int");

                    b.Property<DateOnly>("СommissioningDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.ToTable("Transformers");
                });

            modelBuilder.Entity("Diploma.Models.Add.UnitAdd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateOnly>("CloseDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int?>("PointAddId")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("PointAddId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("PointAddTransformerAdd", b =>
                {
                    b.Property<int>("PointAddsID")
                        .HasColumnType("int");

                    b.Property<int>("TransformersID")
                        .HasColumnType("int");

                    b.HasKey("PointAddsID", "TransformersID");

                    b.HasIndex("TransformersID");

                    b.ToTable("PointAddTransformerAdd");
                });

            modelBuilder.Entity("Diploma.Models.Add.AbonentAdd", b =>
                {
                    b.HasOne("Diploma.Models.Add.ContractAdd", "ContractAdd")
                        .WithMany("Abonents")
                        .HasForeignKey("ContractAddId");

                    b.HasOne("Diploma.Models.Add.ControllersAdd", "ControllersAdd")
                        .WithMany("AbonentAdds")
                        .HasForeignKey("ControllersAddId");

                    b.Navigation("ContractAdd");

                    b.Navigation("ControllersAdd");
                });

            modelBuilder.Entity("Diploma.Models.Add.MountMeterAdd", b =>
                {
                    b.HasOne("Diploma.Models.Add.MeterAdd", "MeterAdd")
                        .WithOne("MountMeter")
                        .HasForeignKey("Diploma.Models.Add.MountMeterAdd", "MeterAddID");

                    b.HasOne("Diploma.Models.Add.UnitAdd", "UnitAdd")
                        .WithOne("MountMeterAdd")
                        .HasForeignKey("Diploma.Models.Add.MountMeterAdd", "UnitAddID");

                    b.Navigation("MeterAdd");

                    b.Navigation("UnitAdd");
                });

            modelBuilder.Entity("Diploma.Models.Add.PointAdd", b =>
                {
                    b.HasOne("Diploma.Models.Add.AbonentAdd", "AbonentAdd")
                        .WithMany("Points")
                        .HasForeignKey("AbonentAddId");

                    b.HasOne("Diploma.Models.Add.ContractAdd", "ContractAdd")
                        .WithMany()
                        .HasForeignKey("ContractAddId");

                    b.Navigation("AbonentAdd");

                    b.Navigation("ContractAdd");
                });

            modelBuilder.Entity("Diploma.Models.Add.PointsBoundAdd", b =>
                {
                    b.HasOne("Diploma.Models.Add.PointAdd", "PointBase")
                        .WithMany("PointsBoundBase")
                        .HasForeignKey("PointIDBase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma.Models.Add.PointAdd", "PointMinus")
                        .WithMany("PointsBoundMinus")
                        .HasForeignKey("PointIDMinus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PointBase");

                    b.Navigation("PointMinus");
                });

            modelBuilder.Entity("Diploma.Models.Add.UnitAdd", b =>
                {
                    b.HasOne("Diploma.Models.Add.PointAdd", "PointAdd")
                        .WithMany("Units")
                        .HasForeignKey("PointAddId");

                    b.Navigation("PointAdd");
                });

            modelBuilder.Entity("PointAddTransformerAdd", b =>
                {
                    b.HasOne("Diploma.Models.Add.PointAdd", null)
                        .WithMany()
                        .HasForeignKey("PointAddsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma.Models.Add.TransformerAdd", null)
                        .WithMany()
                        .HasForeignKey("TransformersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Diploma.Models.Add.AbonentAdd", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("Diploma.Models.Add.ContractAdd", b =>
                {
                    b.Navigation("Abonents");
                });

            modelBuilder.Entity("Diploma.Models.Add.ControllersAdd", b =>
                {
                    b.Navigation("AbonentAdds");
                });

            modelBuilder.Entity("Diploma.Models.Add.MeterAdd", b =>
                {
                    b.Navigation("MountMeter");
                });

            modelBuilder.Entity("Diploma.Models.Add.PointAdd", b =>
                {
                    b.Navigation("PointsBoundBase");

                    b.Navigation("PointsBoundMinus");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("Diploma.Models.Add.UnitAdd", b =>
                {
                    b.Navigation("MountMeterAdd");
                });
#pragma warning restore 612, 618
        }
    }
}
